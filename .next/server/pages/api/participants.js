"use strict";(()=>{var e={};e.id=270,e.ids=[270],e.modules={8432:e=>{e.exports=require("bcryptjs")},3227:e=>{e.exports=require("next-auth")},2113:e=>{e.exports=require("next-auth/next")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},366:e=>{e.exports=import("kysely")},8678:e=>{e.exports=import("pg")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},9043:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{config:()=>l,default:()=>c,routeModule:()=>d});var a=t(1802),n=t(7153),i=t(6249),o=t(9192),u=e([o]);o=(u.then?(await u)():u)[0];let c=(0,i.l)(o,"default"),l=(0,i.l)(o,"config"),d=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/participants",pathname:"/api/participants",bundlePath:"",filename:""},userland:o});s()}catch(e){s(e)}})},409:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{db:()=>u});var a=t(8678),n=t(366),i=e([a,n]);[a,n]=i.then?(await i)():i;let o=new n.PostgresDialect({pool:new a.default.Pool({database:process.env.DB_NAME,host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASS,port:Number(process.env.DB_PORT),max:10})}),u=new n.Kysely({dialect:o});s()}catch(e){s(e)}})},9102:(e,r,t)=>{t.d(r,{_:()=>a});let s=require("@prisma/client"),a=global.prisma||new s.PrismaClient},3515:(e,r,t)=>{t.r(r),t.d(r,{authOptions:()=>l,default:()=>d});var s=t(2113),a=t.n(s);let n=require("next-auth/providers/credentials");var i=t.n(n),o=t(9102),u=t(8432),c=t.n(u);let l={session:{strategy:"jwt",maxAge:2592e3},debug:!1,providers:[i()({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Invalid credentials");let r=await o._.user.findUnique({where:{email:e.email}});if(!r||!r?.password||!await c().compare(e.password,r.password))throw Error("Invalid credentials");return{id:r.id,email:r.email,name:r.name}}})],pages:{signIn:"/auth/signin"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.email=r.email,e.name=r.name),e),session:async({session:e,token:r})=>({...e,user:{...e.user,id:r.id}})},secret:process.env.NEXTAUTH_SECRET},d=a()(l)},9192:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{default:()=>u});var a=t(409),n=t(3227),i=t(3515),o=e([a]);async function u(e,r){try{if("GET"===e.method)return c(e,r);let t=await (0,n.getServerSession)(e,r,i.authOptions);if(!t)return r.status(401).json({message:"Unauthorized"});if("POST"===e.method)return l(e,r,t);if("DELETE"===e.method)return d(e,r,t);return r.status(405).json({message:"Method not allowed"})}catch(e){return console.error("Error in participants API:",e),r.status(500).json({message:"Server error"})}}async function c(e,r){try{let{eventId:t}=e.query;if(!t||Array.isArray(t))return r.status(400).json({message:"Invalid event ID"});let s=await a.db.selectFrom("participants as p").innerJoin("accounts as a","a.id","p.userId").select(["p.id as participantId","p.eventId","p.userId","p.joinedAt","a.username","a.firstName","a.lastName"]).where("p.eventId","=",Number(t)).execute();return r.status(200).json(s)}catch(e){return console.error("Error getting participants:",e),r.status(500).json({message:"Error getting participants"})}}async function l(e,r,t){try{let{eventId:n}=e.body,i=t?.user?.email;if(!n||!i)return r.status(400).json({message:"Missing event ID or user email"});console.log("Looking for account with email/username:",i);let o=await a.db.selectFrom("accounts").select(["id","username"]).execute();console.log("All accounts:",o);let u=o.find(e=>e.username===i);if(u)var s=u.id;else{console.log("Account not found for email:",i);let e=t.user?.name||"User";console.log("Creating new account for user:",e,i);let n=await a.db.insertInto("accounts").values({username:i,password:"temppassword",firstName:e?.split(" ")[0]||"User",lastName:e?.split(" ")[1]||"User",email:i}).returning(["id","username"]).executeTakeFirst();if(console.log("Created new account:",n),!n)return r.status(500).json({message:"Failed to create user account"});var s=n.id}if((await a.db.selectFrom("participants as p").select(["p.id"]).where("p.eventId","=",Number(n)).where("p.userId","=",s).execute()).length>0)return r.status(409).json({message:"Already joined this event"});try{console.log("Inserting participant with eventId:",Number(n),"userId:",s);let e=await a.db.insertInto("participants").values({eventId:Number(n),userId:Number(s),joinedAt:new Date}).returning(["id","eventId","userId","joinedAt"]).executeTakeFirst();return console.log("Participant added successfully:",e),r.status(201).json(e)}catch(e){return console.error("Error inserting participant:",e),console.error("Error stack:",e.stack),r.status(500).json({message:"Error inserting participant",error:e.message||"Unknown error"})}}catch(e){return console.error("Error joining event:",e),console.error("Error stack:",e.stack),r.status(500).json({message:"Error joining event",error:e.message||"Unknown error"})}}async function d(e,r,t){try{let{eventId:s}=e.query,n=t?.user?.email;if(!s||Array.isArray(s)||!n)return r.status(400).json({message:"Invalid event ID or missing user email"});let i=(await a.db.selectFrom("accounts").select(["id","username"]).execute()).find(e=>e.username===n);if(!i)return r.status(404).json({message:"Account not found"});let o=i.id;return await a.db.deleteFrom("participants as p").where("p.eventId","=",Number(s)).where("p.userId","=",o).executeTakeFirst(),r.status(200).json({message:"Left event successfully"})}catch(e){return console.error("Error leaving event:",e),r.status(500).json({message:"Error leaving event"})}}a=(o.then?(await o)():o)[0],s()}catch(e){s(e)}})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=9043);module.exports=t})();